"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ—Ä–∑–∏–Ω—ã –¥–ª—è Telegram-–±–æ—Ç–∞ TeleFood.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª–∞—Å—Å CartHandler, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
–≤–∫–ª—é—á–∞—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ—Ä–∑–∏–Ω—ã, –æ—á–∏—Å—Ç–∫—É –∫–æ—Ä–∑–∏–Ω—ã, –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤.
"""

from collections import Counter

from telebot import types

from database import SessionLocal
from services import (
    add_product_to_cart,
    checkout_cart,
    create_user_if_not_exists,
    get_all_categories,
    get_cart,
)


class CartHandler:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ—Ä–∑–∏–Ω—ã: –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ—Ä–∑–∏–Ω—É, –æ—Ñ–æ—Ä–º–ª—è–µ—Ç –∏ –æ—á–∏—â–∞–µ—Ç –µ—ë, –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–æ–≤–∞—Ä—ã.
    """

    def __init__(self, bot, main_menu):
        self.bot = bot
        self.main_menu = main_menu

    def show_cart(self, message):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        with SessionLocal() as db:
            user_id, user_name = create_user_if_not_exists(
                db, message.from_user.id, message.from_user.first_name
            )
            cart = get_cart(db, user_id)
            if not cart or not cart.content.get("products"):
                self.bot.send_message(
                    message.chat.id, "–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.", reply_markup=self.main_menu
                )
                return
            counts = Counter(cart.content["products"])
            text = "<b>–ö–æ—Ä–∑–∏–Ω–∞:</b>\n"
            total = 0
            for pid, count in counts.items():
                prod = db.query(get_all_categories.__globals__["Product"]).get(pid)
                if prod:
                    subtotal = prod.cost * count
                    text += f"{prod.name} x{count} = {subtotal:.2f}‚ÇΩ\n"
                    total += subtotal
            text += f"\n<b>–ò—Ç–æ–≥–æ: {total:.2f}‚ÇΩ</b>"
            markup = types.InlineKeyboardMarkup()
            markup.add(
                types.InlineKeyboardButton(
                    "‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="checkout"
                ),
                types.InlineKeyboardButton(
                    "üóë –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", callback_data="clear_cart"
                ),
            )
            self.bot.send_message(
                message.chat.id, text, parse_mode="HTML", reply_markup=markup
            )

    def clear_cart(self, call):
        """–û—á–∏—â–∞–µ—Ç –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        with SessionLocal() as db:
            user_id, user_name = create_user_if_not_exists(
                db, call.from_user.id, call.from_user.first_name
            )
            cart = get_cart(db, user_id)
            if cart:
                cart.content = {"products": []}
                db.commit()
        self.bot.answer_callback_query(call.id, "–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞.")
        self.bot.send_message(
            call.message.chat.id, "–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞.", reply_markup=self.main_menu
        )

    def ask_payment_method(self, call, order_id):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≤—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã —Å –Ω–æ–º–µ—Ä–æ–º –∑–∞–∫–∞–∑–∞."""
        markup = types.InlineKeyboardMarkup()
        markup.add(
            types.InlineKeyboardButton(
                "üí≥ –û–Ω–ª–∞–π–Ω", callback_data=f"pay_online_{order_id}"
            ),
            types.InlineKeyboardButton(
                "üíµ –ù–∞–ª–∏—á–Ω—ã–º–∏", callback_data=f"pay_cash_{order_id}"
            ),
        )
        self.bot.send_message(
            call.message.chat.id,
            f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –¥–ª—è –∑–∞–∫–∞–∑–∞ ‚Ññ{order_id}:",
            reply_markup=markup,
        )

    def checkout(self, call):
        """–û—Ñ–æ—Ä–º–ª—è–µ—Ç –∑–∞–∫–∞–∑ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã."""
        with SessionLocal() as db:
            user_id, user_name = create_user_if_not_exists(
                db, call.from_user.id, call.from_user.first_name
            )
            order = checkout_cart(db, user_id)
        if order:
            self.bot.send_message(
                call.message.chat.id,
                f"‚úÖ –ó–∞–∫–∞–∑ ‚Ññ{order.id} –æ—Ñ–æ—Ä–º–ª–µ–Ω!",
                reply_markup=self.main_menu,
            )
            self.ask_payment_method(call, order.id)
        else:
            self.bot.send_message(call.message.chat.id, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞.")

    def add_to_cart(self, call):
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        product_id = int(call.data.split("_")[1])
        with SessionLocal() as db:
            user_id, user_name = create_user_if_not_exists(
                db, call.from_user.id, call.from_user.first_name
            )
            add_product_to_cart(db, user_id, product_id)
        self.bot.answer_callback_query(call.id, "–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É.")
        self.bot.send_message(
            call.message.chat.id,
            "–î–æ–±–∞–≤–ª–µ–Ω–æ. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤—ã–±–æ—Ä –∏–ª–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ üõí –ö–æ—Ä–∑–∏–Ω—É.",
        )

    def pay_online(self, call):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –æ–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç—ã –¥–ª—è –∑–∞–∫–∞–∑–∞."""
        order_id = call.data.split("_")[-1]
        self.bot.answer_callback_query(call.id)
        self.bot.send_message(
            call.message.chat.id,
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–ø–ª–∞—Ç—É –æ–Ω–ª–∞–π–Ω –¥–ª—è –∑–∞–∫–∞–∑–∞ ‚Ññ{order_id}. (–ó–∞–≥–ª—É—à–∫–∞)",
        )

    def pay_cash(self, call):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –æ–ø–ª–∞—Ç—ã –Ω–∞–ª–∏—á–Ω—ã–º–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞."""
        order_id = call.data.split("_")[-1]
        self.bot.answer_callback_query(call.id)
        self.bot.send_message(
            call.message.chat.id,
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–ø–ª–∞—Ç—É –Ω–∞–ª–∏—á–Ω—ã–º–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞ ‚Ññ{order_id}. (–ó–∞–≥–ª—É—à–∫–∞)",
        )
